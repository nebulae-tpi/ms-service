type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type ServiceDriverBlock{
  key: String
  notes: String
  startTime: BigInt
  endTime: BigInt
}

type ServiceDriver {
  "Driver ID"
  _id: ID!
  "Business ID"
  businessId: String!
  "Driver name"
  name: String
  "Driver lastname"
  lastname: String
  "Driver username"
  username: String
  "Driver active state"
  active: Boolean!
  "Driver blocks"
  blocks: [ServiceDriverBlock]
  "Driver document type"
  documentType: String
  "Driver document ID"
  documentId: String
  "Driver pmr state"
  pmr: Boolean
  "Driver languages"
  languages: [String]
  "Driver phone"
  phone: String
  "Vehicle assignedVehicles"
  assignedVehicles: [String]  
}

type ServiceDriverGeneralInfo {
  "Driver name"
  name: String!
  "Driver lastname"
  lastname: String
  "Person ID"
  documentId: String
}

type ServiceDriverVehicle {
  "Vehicle ID"
  _id: ID
  "Driver ID"
  driverId: String
  "Vehicle business ID"
  businessId: String
  "Vehicle license plate"
  licensePlate: String  
  "Vehicle state"
  active: Boolean
  "vehicle blocks"
  blocks: [ServiceDriverVehicleBlock]
  "Vehicle brand"
  brand: String
  "Vehicle line"
  line: String  
  "Vehicle model"
  model: String
  "Vehicle fuel type"
  fuelType: String
  "Vehicle features"
  features: [String]
}

type ServiceDriverVehicleBlock{
  key: String
  notes: String
  startTime: BigInt
  endTime: BigInt
}

input ServiceVehicleAssignmentFilterInput {
  "ID of the business"
  businessId: String
  "Name"
  name: String
  "lastname"
  lastname: String
  "person ID"
  documentId: String
  "License plate"
  licensePlate: String
  "Driver state"
  state: Boolean
  "Creator user"
  creatorUser: String
  "modifier user"
  modifierUser: String
  "get data created after indicated timestamp"
  creationTimestamp: BigInt
}

input PaginationInput {
  "Page"
  page: Int!
  "Count"
  count: Int!
  "Sort, default: ASC"
  sort: Int
}


type Query {
  "Get Drivers filtered"
  ServiceDrivers(filterInput: ServiceVehicleAssignmentFilterInput!, paginationInput: PaginationInput!): [ServiceDriver]
  "Get the amount of Drivers filtered "
  ServiceDriversSize(filterInput: ServiceVehicleAssignmentFilterInput!): Int!
  "Get Driver by its id"
  ServiceDriver(id: String!): ServiceDriver
  "get the vehicles assigned to the related driver"
  ServiceDriverVehicleList(driverId: String!, paginationInput: PaginationInput!): [ServiceDriverVehicle]
}

type Mutation {
  ServiceAssignVehicleToDriver(driverId: String!, vehiclePlate: String!): CommandResponse
  ServiceUnassignVehicleToDriver(driverId: String!, vehiclePlate: String!): CommandResponse
}

type Subscription {
  "This events is triggered when a Driver is created or updated"
  ServiceDriverVehicleAssignedSubscription(driverId: String): ServiceDriverVehicle  
}